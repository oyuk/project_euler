# -*- coding: utf-8 -*-
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued te

# def fib n
#   n < 2 ? n:fib(n-1)+fib(n-2)
# end

class Test
  @@memo = [0,1]

  def fib n

    if @@memo.size <= n
      # @@memo[n-1] = fib(n-1) unless @@memo[n-1]
      @@memo[n] = @@memo[n-1]+@@memo[n-2]
    end
    
    @@memo[n]
  end
end

t = Test.new
(0..10).each{|i| p "#{i} #{t.fib(i)}"}
# >> "0 0"
# >> "1 1"
# >> "2 1"
# >> "3 2"
# >> "4 3"
# >> "5 5"
# >> "6 8"
# >> "7 13"
# >> "8 21"
# >> "9 34"
# >> "10 55"
